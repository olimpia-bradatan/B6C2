@model B6C2.Models.RequestBlood

@{
    ViewBag.Title = "RequestBloodCreate";
}

<h2> RequestBlood </h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>RequestBlood</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idCenter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.idCenter, (SelectList)ViewBag.DonationCenters, "Select hospital", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idCenter, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idHospital, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.idHospital, (SelectList)ViewBag.Hospitals, "Select donation Center", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idHospital, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idBlood, "Blood", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idBlood", new List<SelectListItem>
           {
            new SelectListItem { Text = "Group: 0, Rh: +", Value = "1"},
            new SelectListItem { Text = "Group: 0, Rh: -", Value = "2"},
            new SelectListItem { Text = "Group: A, Rh: +", Value = "3"},
            new SelectListItem { Text = "Group: A, Rh: -", Value = "4"},
            new SelectListItem { Text = "Group: B, Rh: +", Value = "5"},
            new SelectListItem { Text = "Group: B, Rh: -", Value = "6"},
            new SelectListItem { Text = "Group: AB, Rh: +", Value = "7"},
            new SelectListItem { Text = "Group: AB, Rh: -", Value = "8"},
           }, "Select Blood group and Rh")
            @Html.ValidationMessageFor(model => model.idBlood, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
